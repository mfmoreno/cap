services:
  api:
    build: .
    platform: linux/amd64
    container_name: cap_server
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8000:8000"
    env_file:
      - .env
    command: >
      sh -c "sleep 15 && uvicorn src.cap.main:app --host 0.0.0.0 --port 8000"
    depends_on:
      virtuoso:
        condition: service_started
      jaeger:
        condition: service_started
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:16
    ports:
      - "5433:5432"   # host access (avoid clashing with any local 5432)
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./ops/sql/init-cap.sql:/docker-entrypoint-initdb.d/10-init-cap.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB:-postgres} -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - app-network

  virtuoso:
    image: openlink/virtuoso-opensource-7:latest
    platform: linux/amd64
    container_name: virtuoso
    ports:
      - "8890:8890"
      - "1111:1111"
    env_file:
      - .env
    environment:
      - DBA_PASSWORD=mysecretpassword
    volumes:
      - /home/marcio/data/cardano/virtuoso:/database
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8890/sparql >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
    networks:
      - app-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    platform: linux/amd64
    container_name: jaeger
    ports:
      - "16688:16686" # UI
      - "4319:4317"   # OTLP gRPC
      - "4322:4318"   # OTLP HTTP
    env_file:
      - .env
    networks:
      - app-network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 30s
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  virtuoso-data:
  postgres-data:
  ollama-data: